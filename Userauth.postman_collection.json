{
	"info": {
		"_postman_id": "6751910e-9f88-4641-9a8e-3b41b7b447ff",
		"name": "Userauth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create user 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn('{{$randomPhone}}'))",
							"pm.collectionVariables.set(\"userName\", pm.variables.replaceIn('{{$randomUserName}}'))",
							"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'))",
							"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"if (responseJSON[\"userId\"]) {",
							"    pm.collectionVariables.set(\"firstUserId\", responseJSON[\"userId\"])",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{userName}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"email\": \"{{email}}\",\n    \"phone\": \"{{phone}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"register"
					]
				},
				"description": "Create user"
			},
			"response": []
		},
		{
			"name": "Get unauthorized user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/user/profile/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"profile",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{userName}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/v1/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				},
				"description": "Auth user"
			},
			"response": []
		},
		{
			"name": "Get user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"));",
							"    pm.expect(jsonData.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));",
							"    pm.expect(jsonData.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));",
							"    pm.expect(jsonData.phone).to.eql(pm.collectionVariables.get(\"phone\"));",
							"    pm.expect(jsonData.password).to.eql(pm.collectionVariables.get(\"password\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{IDtoken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/user/profile/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"profile",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn('{{$randomPhone}}'))",
							"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'))",
							"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"));",
							"    pm.expect(jsonData.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));",
							"    pm.expect(jsonData.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));",
							"    pm.expect(jsonData.phone).to.eql(pm.collectionVariables.get(\"phone\"));",
							"    pm.expect(jsonData.password).to.eql(pm.collectionVariables.get(\"password\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{IDtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"email\": \"{{email}}\",\n    \"phone\": \"{{phone}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/update/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"update",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"));",
							"    pm.expect(jsonData.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));",
							"    pm.expect(jsonData.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));",
							"    pm.expect(jsonData.phone).to.eql(pm.collectionVariables.get(\"phone\"));",
							"    pm.expect(jsonData.password).to.eql(pm.collectionVariables.get(\"password\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{IDtoken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/user/profile/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"profile",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn('{{$randomPhone}}'))",
							"pm.collectionVariables.set(\"userName\", pm.variables.replaceIn('{{$randomUserName}}'))",
							"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'))",
							"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{userName}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"email\": \"{{email}}\",\n    \"phone\": \"{{phone}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"register"
					]
				},
				"description": "Create user"
			},
			"response": []
		},
		{
			"name": "Auth user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{userName}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/v1/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				},
				"description": "Auth user"
			},
			"response": []
		},
		{
			"name": "Get user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{IDtoken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/user/profile/{{firstUserId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"profile",
						"{{firstUserId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var responseJSON = JSON.parse(responseBody)",
					"if (responseJSON[\"userId\"]) {",
					"    pm.collectionVariables.set(\"userId\", responseJSON[\"userId\"])",
					"}",
					"if (responseJSON[\"IDtoken\"]) {",
					"    pm.collectionVariables.set(\"IDtoken\", responseJSON[\"IDtoken\"])",
					"}",
					"",
					"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
					"tests[\"[INFO] Response: \" + responseBody] = true;"
				]
			}
		}
	],
	"variable": [
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "arch.homework/otusapp"
		},
		{
			"key": "IDtoken",
			"value": ""
		},
		{
			"key": "firstUserId",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "firstName",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		},
		{
			"key": "userName",
			"value": ""
		},
		{
			"key": "phone",
			"value": ""
		}
	]
}